{"version":3,"sources":["firebase.js","Home.js","features/appSlice.js","SidebarOption.js","Sidebar.js","ChatInput.js","Message.js","Chat.js","Login.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","Home","useAuthState","user","HeaderContainer","HeaderLeft","HeaderAvatar","alt","displayName","src","photoURL","HeaderSeach","placeholder","HeaderRight","styled","div","Avatar","appSlice","createSlice","name","initialState","roomId","reducers","enterRoom","state","action","payload","actions","selectRoomId","app","SidebarOption","Icon","title","addChannelOption","id","dispatch","useDispatch","SidebarOptionContainer","onClick","channelName","prompt","collection","add","fontSize","style","padding","SidebarOptionChannel","h3","Sidebar","useCollection","channel","SidebarContainer","SidebarHeader","SidebarInfo","InsertComment","Inbox","Drafts","BookmarkBorder","PeopleAlt","Apps","FileCopy","ExpandLess","Button","signOut","ExpandMore","Add","docs","map","doc","data","ChatInput","chatRef","channelId","useState","input","setInput","ChatInputContainer","value","onChange","e","target","hidden","type","preventDefault","message","timestamp","FieldValue","serverTimestamp","userImage","current","scrollIntoView","behavior","Message","MessageContainer","MessageInfo","Date","toDate","toUTCString","Chat","useRef","useSelector","useDocument","roomDetails","orderBy","roomMessages","loading","useEffect","ChatContainer","Header","StarBorderOutlined","InfoOutlined","ChatMessages","ChatBottom","ref","Login","LoginContainer","LoginInner","signInWithPopup","catch","error","alert","App","AppLoading","AppLoadingContent","color","fadeIn","className","AppBody","path","exact","configureStore","reducer","appReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.16e2fec5.chunk.js","sourcesContent":["import firebase from \"firebase\"\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCDujOAxqHETU1d-AM6gL1pM8CVma_JH9U\",\n    authDomain: \"michina-b3eaa.firebaseapp.com\",\n    projectId: \"michina-b3eaa\",\n    storageBucket: \"michina-b3eaa.appspot.com\",\n    messagingSenderId: \"671233964735\",\n    appId: \"1:671233964735:web:90df14b19dfee2d8b9e40a\",\n    measurementId: \"G-G31SWP13ZX\"\n};\n  \nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nexport {auth,provider,db}","import React from \"react\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\nimport styled from \"styled-components\";\nimport {Avatar} from \"@material-ui/core\"\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { auth } from \"./firebase\";\n\nfunction Home() {\n  const [user] = useAuthState(auth);\n  return (\n    <HeaderContainer>\n      <HeaderLeft>\n        <HeaderAvatar\n          alt={user?.displayName} src={user?.photoURL} />\n        <AccessTimeIcon />\n      </HeaderLeft>\n      <HeaderSeach>\n              <SearchIcon />\n              <input placeholder=\"search...\"/>\n      </HeaderSeach>\n          <HeaderRight>\n              <HelpOutlineIcon/>\n      </HeaderRight>\n    </HeaderContainer>\n  );\n}\n\nexport default Home;\n\nconst HeaderSeach = styled.div`\n    flex:0.4;\n    opacity:1;\n    border-radius:6px;\n    background-color: #421f44;\n    text-align: center;\n    display: flex;\n    padding: 0 50px;\n    color: gray;\n    border: 1px gray solid;\n    >input{\n        background-color: transparent;\n        border: none;\n        text-align: center;\n        min-width:30vw;\n        outline:0;\n        color: white;\n    }\n`;\nconst HeaderContainer = styled.div`\n  display: flex;\n  position: fixed;\n  width: 100vw;\n  align-items: center;\n  justify-content: space-between;\n  padding: 10px;\n  background-color: #421f44;\n  color: white;\n\n`;\nconst HeaderLeft = styled.div`\n  flex: 0.3;\n  display: flex;\n  align-items: center;\n  margin-left: 20px;\n\n  >.MuiSvgIcon-root{\n      margin-left: auto;\n      margin-right: 30px;\n  }\n`;\nconst HeaderAvatar = styled(Avatar)`\n    cursor: pointer;\n    :hover{\n        opacity:0.8;\n    }\n`;\nconst HeaderRight = styled.div`\n    flex:0.3;\n    display: flex;\n    align-items: flex-end;\n    >.MuiSvgIcon-root{\n      margin-left: auto;\n      margin-right: 20px;\n  }\n`;","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const appSlice = createSlice({\r\n  name: 'app',\r\n  initialState: {\r\n    roomId: null,\r\n  },\r\n  reducers: {\r\n    enterRoom: (state, action) => {\r\n      state.roomId = action.payload.roomId;\r\n    },\r\n    \r\n    },\r\n    \r\n  \r\n});\r\n\r\nexport const { enterRoom } = appSlice.actions;\r\nexport const selectRoomId = state => state.app.roomId;\r\n\r\nexport default appSlice.reducer;\r\n","import React from 'react'\nimport { useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport { db } from \"./firebase\"\nimport{enterRoom} from './features/appSlice'\n\nfunction SidebarOption({ Icon, title, addChannelOption,id }) {\n    const dispatch = useDispatch();\n\n    const addChannel = () => {\n        const channelName = prompt('please enter channel name');\n        if (channelName) {\n            db.collection(\"rooms\").add({\n                name: channelName,\n            })\n        }\n    }\n    const selectChannel = () => {\n        if (id) {\n            dispatch(enterRoom({roomId:id}))\n        }\n    }\n    return (\n        <SidebarOptionContainer onClick={addChannelOption? addChannel:selectChannel}>\n            {Icon && <Icon fontSize=\"small\" style={{ padding: 10 }} />}\n            {Icon ? (<h3>{title}</h3>) : (\n                <SidebarOptionChannel>\n                    <span>#</span>{title}\n                </SidebarOptionChannel>\n            )}\n        </SidebarOptionContainer>\n    )\n}\n\nexport default SidebarOption\n\nconst SidebarOptionContainer = styled.div`\n    display: flex;\n    font-size:12px;\n    align-items: center;\n    padding-left: 2px;\n    cursor: pointer;\n\n    :hover{\n        opacity: 0.9;\n        background-color: #340e36;\n        \n    }\n    >h3{\n        font-weight:500;\n    }\n    >h3>span{\n        padding: 15px;\n    }\n`;\nconst SidebarOptionChannel = styled.h3`\n    padding:10px 0;\n    font-weight:500;\n\n`;","import React from 'react'\nimport styled  from 'styled-components';\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord'\nimport SidebarOption from './SidebarOption';\nimport {useCollection} from \"react-firebase-hooks/firestore\"\nimport { Add, Apps, BookmarkBorder, Drafts, ExpandLess, ExpandMore, FileCopy, Inbox, InsertComment, PeopleAlt } from '@material-ui/icons';\nimport { auth, db } from './firebase'\nimport { Button } from '@material-ui/core';\nimport { useAuthState } from 'react-firebase-hooks/auth';\n\nfunction Sidebar() {\n    const [user] = useAuthState(auth);\n    const [channel] = useCollection(db.collection(\"rooms\"));\n    return (\n        <SidebarContainer>\n            <SidebarHeader>\n                <SidebarInfo>\n                    <h2>Welcome....</h2>\n                    <h3>\n                    <FiberManualRecordIcon/>{user.displayName}</h3>\n                </SidebarInfo>\n            </SidebarHeader>\n            <SidebarOption Icon={InsertComment} title=\"Threads\" />\n            <SidebarOption Icon={Inbox} title=\"Mentions & Reactions\" />\n            <SidebarOption Icon={Drafts} title=\"Saved Items\" />\n            <SidebarOption Icon={BookmarkBorder} title=\"Channel browser\" />\n            <SidebarOption Icon={PeopleAlt} title=\"People and User groups\"/>\n            <SidebarOption Icon={Apps} title=\"Apps\" />\n            <SidebarOption Icon={FileCopy} title=\"File Browser\" />\n            <SidebarOption Icon={ExpandLess} title=\"Show less\" />\n            <Button  onClick={()=> auth.signOut()}>Log Out</Button>\n            <hr />\n            <SidebarOption Icon={ExpandMore} title=\"Channels\" />\n            <hr />\n            <SidebarOption Icon={Add} addChannelOption title=\"Add channel\" />\n            {channel?.docs.map(doc => (\n                <SidebarOption key= {doc.id} id={doc.id} title={doc.data().name}/>))}\n        </SidebarContainer>\n    )\n}\n\nexport default Sidebar\n\nconst SidebarContainer = styled.div`\n    color:white;\n    background-color:#421f44;\n    flex:0.3;\n    margin-top:60px;\n    border-top:1px solid #49274b;\n    padding:10px;\n    max-width: 260px;\n    >hr{\n        margin-top: 10px;\n        margin-bottom: 10px;\n        border: 1px solid #49274b;\n    }\n    >Button{\n        background-color:white;\n    }\n    >Button:hover{\n        color:white;\n        background-color: transparent;\n    }\n`;\nconst SidebarHeader = styled.div`\n    display: flex;\n    border-bottom: 1px solid #49274b;\n    padding: 13px;\n    >.MuiSvgIcon-root{\n      background-color: white;\n      margin-right: 8px;\n      border-radius: 999px;\n      font-size: 18px;\n      background-color: white;\n  }\n\n`;\n\nconst SidebarInfo = styled.div`\n    flex:1;\n    >h2{\n        font-size: 15px;\n        font-weight:900;\n        margin-bottom: 5px;\n\n    }\n    >h3{\n        display: flex;\n        font-size: 13px;\n        font-weight:400px;\n        align-items: center;\n    }\n    >h3>.MuiSvgIcon-root{\n        font-size: 14px;\n        margin-top: 1px;\n        margin-right: 2px; \n        color:green;\n    }\n`;","import { Button } from '@material-ui/core';\nimport React,{useState} from 'react'\nimport styled from 'styled-components'\nimport { auth, db } from './firebase'\nimport firebase from 'firebase'\nimport { useAuthState } from 'react-firebase-hooks/auth';\nfunction ChatInput({channelName,chatRef, channelId }) {\n    const [input, setInput] = useState(\"\");\n    const [user] = useAuthState(auth);\n\n    const sendMessage = (e) => {\n        e.preventDefault();//prevents refresh\n        \n        if (!channelId) {\n            return false;\n        }\n        db.collection(\"rooms\").doc(channelId).collection(\"messages\").add({\n            message: input,\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n            user: user.displayName,\n            userImage: user.photoURL,\n        });\n        chatRef?.current?.scrollIntoView({\n            behavior: \"smooth\",\n        });\n        setInput(\"\");\n    }\n    return (\n        <ChatInputContainer>\n            <form>\n                <input value={input}\n                    onChange={(e)=>setInput(e.target.value)}\n                    placeholder={`message #${channelName}`} />\n                <Button hidden type=\"submit\" onClick={sendMessage}>\n                    Send\n                </Button>\n            </form>\n        </ChatInputContainer>\n    )\n}\n\nexport default ChatInput\n\nconst ChatInputContainer = styled.div`\n    border-radius: 20px;\n\n    >form{\n        position: relative;\n        display: flex;\n        justify-content: center;\n    }\n    >form>input{\n        position: fixed;\n        bottom: 30px;\n        width: 60%;\n        border: 1px solid gray;\n        border-radius: 3px;\n        padding: 20px;\n        outline: none;\n    }\n    >form>button{\n       display: none;\n    }\n`;","import React from 'react'\nimport styled from 'styled-components';\n\nfunction Message({message,timestamp, user,userImage}) {\n    return (\n        <MessageContainer>\n            <img src={userImage} alt=\"\"/>\n            <MessageInfo>\n                <h4>{ message}</h4>\n                <h6>{user}<span>{new Date(timestamp?.toDate()).toUTCString()}</span></h6>\n\n            </MessageInfo>\n        </MessageContainer>\n    )\n}\n\nexport default Message\n\nconst MessageContainer = styled.div`\n    display: flex;\n    align-items: center;\n    padding: 20px;\n\n    >img{\n        height:50px;\n        border-radius: 8px;\n    }\n`;\nconst MessageInfo = styled.div`\n    padding-left:10px;\n    >h6>span{\n        color: gray;\n        font-weight:300;\n        margin-left: 4px;\n        font-size: 10px;\n    }\n`;","import { InfoOutlined, StarBorderOutlined } from '@material-ui/icons';\nimport React,{ useRef, useEffect} from 'react'\nimport styled from 'styled-components';\nimport { useSelector } from \"react-redux\";\nimport { selectRoomId } from \"./features/appSlice\";\nimport ChatInput from './ChatInput';\nimport { useDocument,useCollection } from 'react-firebase-hooks/firestore';\nimport { db } from './firebase';\nimport Message from './Message';\n\nfunction Chat() {\n    const chatRef = useRef(null);\n    const roomId = useSelector(selectRoomId);\n    const [roomDetails] = useDocument(\n        roomId && db.collection(\"rooms\").doc(roomId)\n    );\n    const [roomMessages, loading] = useCollection(\n        roomId && db.collection(\"rooms\").doc(roomId).collection(\"messages\").orderBy(\"timestamp\",\"asc\")\n    );\n    useEffect(() => {\n        chatRef?.current?.scrollIntoView({\n            behavior: \"smooth\",\n        });\n    },[roomId, loading])\n    return (\n        <ChatContainer>\n            {roomDetails && roomMessages && (\n            <>\n            <Header>\n                <HeaderLeft>\n                    <h4><strong>#{roomDetails?.data().name}</strong></h4>\n                    <StarBorderOutlined />\n                </HeaderLeft>\n                <HeaderRight>\n                    <p><InfoOutlined/></p>\n                </HeaderRight>\n            </Header>\n            <ChatMessages>\n                {roomMessages?.docs.map((doc) => {\n                    const { message, timestamp, user, userImage } = doc.data();\n                    return (\n                        <Message\n                            key={doc.id}\n                            message={message}\n                            timestamp={timestamp}\n                            user={user}\n                            userImage={userImage}\n                        />\n                    );\n                })}\n                <ChatBottom ref={chatRef}/>\n            </ChatMessages>\n                <ChatInput chatRef={chatRef} channelId={roomId} channelName={roomDetails?.data().name}/>\n            </>\n            )}\n            \n        </ChatContainer>\n    )\n}\n \nexport default Chat\nconst Header = styled.div`\n    display: flex;\n    justify-content: space-between;\n    padding: 20px;\n    border-bottom: 1px solid lightgrey;\n`;\nconst HeaderLeft = styled.div`\n    display: flex;\n    text-transform: lowercase;\n    margin-right: 10px;\n    >h4>.MuiSvgIcon-root{\n        margin-left:10px;\n        font-size: 18px;\n    }\n\n`;\n\nconst HeaderRight = styled.div`\n    >p{\n        display: flex;\n        align-items: center;\n        font-size: 14px;\n    }\n    >p>.MuiSvgIcon-root{\n        margin-right: 5px;\n        font-size: 16px;\n    }\n`;\n\nconst ChatContainer = styled.div`\n    flex: 0.7;\n    flex-grow:1;\n    overflow-y: scroll;\n    margin-top:60px; \n`;\nconst ChatMessages = styled.div``;\nconst ChatBottom = styled.div`\n    padding-bottom:200px;\n`;","import { Button } from '@material-ui/core';\nimport React from 'react'\nimport styled from 'styled-components';\nimport {auth,provider} from './firebase'\n\nfunction Login() {\n    const signIn = (e) => {\n        e.preventDefault();\n        auth.signInWithPopup(provider).catch((error) => alert(error.message));\n    }\n    return (\n        <LoginContainer>\n            <LoginInner>\n                <img src=\"https://cdn.pixabay.com/photo/2016/12/28/08/15/hummingbird-1935665_1280.png\" alt=\"\"/>\n                <h1>sign in to sleek Jos</h1>\n                <p>Michina</p>\n            <Button onClick={signIn}>Sign In with Google</Button>\n            </LoginInner>\n            \n\n        </LoginContainer>\n    )\n}\n\nexport default Login\n\nconst LoginContainer = styled.div`\n    background-color: #ccc;\n    height: 100vh;\n    display: grid;\n    place-items: center;\n`;\nconst LoginInner = styled.div`\npadding:100px;\ntext-align: center;\nbackground-color: #96185F;\nborder-radius:10px;\nbox-shadow: 0 1px 3px rgba(85, 252, 12, 0.12 ), 0 1px 2px rgba(85, 252, 12, 0.24 );\n    >img{\n        object-fit: contain; \n        height: 100px;\n        margin-bottom:40px;\n    }\n    >h1{\n        color: #fff;\n    }\n    >p{\n        color: #fff;\n    }\n    >Button{\n        background-color: #f8f8f8;\n    }\n    >Button:hover{\n        background-color: transparent;\n        color: #fff;\n\n    }\n`;","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport './App.css';\r\nimport Home from './Home';\r\nimport styled  from 'styled-components';\r\nimport Sidebar from './Sidebar';\r\nimport Chat from './Chat';\r\nimport { auth } from './firebase';\r\nimport Login from './Login';\r\nimport { useAuthState } from 'react-firebase-hooks/auth'\r\nimport Spinner from \"react-spinkit\"\r\n\r\nfunction App() {\r\n  const [user, loading] = useAuthState(auth);\r\n\r\n  if (loading) {\r\n    return (\r\n      <AppLoading>\r\n      <AppLoadingContent>\r\n          <img src=\"https://cdn.pixabay.com/photo/2016/12/28/08/15/hummingbird-1935665_1280.png\" alt=\"\"/>\r\n          <Spinner name=\"ball-spin-fade-loader\" color=\"purple\" fadeIn=\"none\"/>\r\n      </AppLoadingContent>\r\n    </AppLoading>\r\n    );\r\n    \r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        {!user ? (<Login/>): (\r\n          <>\r\n          <Home />\r\n        <AppBody>\r\n\r\n        <Sidebar/>\r\n\r\n      \r\n      <Switch>\r\n          \r\n          <Route path=\"/\" exact>\r\n            <Chat />\r\n          </Route>\r\n          </Switch>\r\n        </AppBody>\r\n        </>)}\r\n        \r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\nconst AppBody = styled.div`\r\n  display: flex;\r\n  \r\n`;\r\nconst AppLoading = styled.div`\r\n  display:grid;\r\n  place-items:center;\r\n  height: 100vh;\r\n  width: 100vw;\r\n`;\r\n\r\nconst AppLoadingContent= styled.div`\r\n  text-align: center;\r\n  padding-bottom:100px;\r\n  display: flex;\r\n  flex-direction:column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  >img{\r\n    height:100px;\r\n    padding: 20px;\r\n    margin-bottom:40px;\r\n  }\r\n`;","import { configureStore } from '@reduxjs/toolkit';\r\nimport appReducer from '../features/appSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    app: appReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}